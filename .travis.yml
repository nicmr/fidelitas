dist: bionic
language: rust
rust:
  - stable

services:
  - docker

addons:
  apt:
    packages:
    - npm

cache:
  - cargo
  - apt

env:
  global:
    - GITHUB_RELEASE_TITLE="Travis_build_${TRAVIS_BUILD_NUMBER}"
    - SKIP_ELM=TRUE
  matrix:
    - TARGET="x86_64-unknown-linux-gnu"
    - TARGET="armv7-unknown-linux-gnueabihf"

jobs:
  include:
    - stage: finish_deploy
      deploy:
        provider: releases
        skip_cleanup: true
        api_key: $GITHUB_ACCESS_TOKEN 
        title: $GITHUB_RELEASE_TITLE
        on:
          branch: master
        draft: false

install:
  # elm support
  - sudo npm install -g elm
  
  # x86_64 apt dependencies
  - if [ $TARGET == "x86_64-unknown-linux-gnu" ]; then sudo apt-get install libvlc-dev; fi

script:
  - elm make elm-src/Main.elm --output=controls.js
  - |
    if [ $TARGET == "x86_64-unknown-linux-gnu" ];
    then
      cargo build --verbose --all --target=$TARGET;
      cargo test --verbose --all;
    fi
  - |
    if [ $TARGET == "armv7-unknown-linux-gnueabihf" ];
    then
      mkdir cross-artifacts;
      docker build -f dockerfiles/fidelitas-cross-armv7.Dockerfile -t fidelitas-cross-armv7 .;
      docker run -v $PWD/cross-artifacts:/artifacts:rw fidelitas-cross-armv7;
      install -D "cross-artifacts/fidelitas" "target/${TARGET}/debug/fidelitas";
    fi


before_deploy:
  - mkdir "release_${TARGET}"
  - cp "target/${TARGET}/debug/fidelitas" "release_${TARGET}/"
  - cp index.html "release_${TARGET}/"
  - cp controls.js "release_${TARGET}/"
  - tar -zcvf "fidelitas_${TARGET}.tar.gz" "release_${TARGET}"

deploy:
  provider: releases
  skip_cleanup: true
  api_key: $GITHUB_ACCESS_TOKEN 
  file:
  - "fidelitas_$TARGET.tar.gz"
  title: $GITHUB_RELEASE_TITLE
  on:
    branch: master
  draft: true
