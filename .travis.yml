language: rust
rust:
  - stable

# addons:
#   apt:
#     sources: -

cache:
  - cargo
  - apt

env:
  global:
    - GITHUB_RELEASE_TITLE="Travis_build_${TRAVIS_BUILD_NUMBER}"
    - SKIP_ELM=TRUE
  matrix:
    - TARGET="x86_64-unknown-linux-gnu"
    - TARGET="armv7-unknown-linux-gnueabihf"

matrix:
  allow_failures:
  - TARGET="armv7-unknown-linux-gnueabihf"

install:
  # elm support
  - npm install -g elm
  
  # rust target for cross-compilation
  - rustup target add $TARGET

  # x86_64 apt dependencies
  - if [ $TARGET == "x86_64-unknown-linux-gnu" ]; then sudo apt-get install libvlc-dev; fi
  # cross-compilation apt dependencies  
  - if [ $TARGET == "armv7-unknown-linux-gnueabihf" ]; then source ./ci-scripts/armv7_cross_deps.sh; fi


  # moved to script file
  # # rust target for cross-compilation
  # - rustup target add armv7-unknown-linux-gnueabihf
  
  # # apt dependencies for cross-compilation
  # - sudo apt-get update
  # - sudo apt-get install build-essential
  # - sudo apt-get install gcc-arm-linux-gnueabihf
  # - sudo apt-get install libc6-dev-armhf-cross
 
  # check if the cross-compile gcc has been correctly installed
  - if [ $TARGET == "armv7-unknown-linux-gnueabihf" ]; then arm-linux-gnueabihf-gcc --version; fi

  # application-specific apt dependencies
  - sudo apt-get install libvlc-dev


script:
  - cargo build --release --verbose --all
  - cargo test --verbose --all
  - elm make elm-src/Main.elm
  - cargo build --verbose --all --target=$TARGET

before_deploy:
  # TODO: adapt to work for all targets


  # package files for x64 release
  - mkdir "release_${TARGET}"
  - cp target/debug/fidelitas "release_${TARGET}/"
  - cp index.html release_${TARGET}/
  - tar -zcvf fidelitas_${TARGET}.tar.gz "release_${TARGET}"

  # # package files for armv7 release
  # - mkdir linux_armv7
  # - cp target/armv7-unknown-linux-gnueabihf/debug/fidelitas linux_armv7
  # - cp index.html linux_x64
  # - tar -zcvf fidelitas_linux_armv7.tar.gz linux_armv7

# deploy:
#   provider: releases
#   skip_cleanup: true
#   api_key: $GITHUB_ACCESS_TOKEN 
#   file:
#   - "fidelitas_linux_x64.tar.gz"
#   - "fidelitas_linux_armv7.tar.gz"
#   title: $GITHUB_RELEASE_TITLE
#   on:
#     branch: master